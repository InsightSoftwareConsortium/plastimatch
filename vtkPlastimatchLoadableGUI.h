/* -----------------------------------------------------------------------
   See COPYRIGHT.TXT and LICENSE.TXT for copyright and license information
   ----------------------------------------------------------------------- */
#ifndef __vtkPlastimatchLoadableGUI_h
#define __vtkPlastimatchLoadableGUI_h

#include "plm_config.h"
#include "vtkSlicerBaseGUIWin32Header.h"
#include "vtkSlicerModuleGUI.h"
#include "vtkMRMLScene.h"
#include "vtkPlastimatchLoadableLogic.h"

class vtkKWFrame;
class vtkKWPushButton;
class vtkKWRadioButtonSet;
class vtkKWRadioButtonSetWithLabel;
class vtkKWScaleWithEntry;
class vtkSlicerNodeSelectorWidget;
class vtkSlicerSliceWidget;

class VTK_EXAMPLELOADABLEMODULE_EXPORT vtkPlastimatchLoadableGUI 
    : public vtkSlicerModuleGUI
{
 public:
    static vtkPlastimatchLoadableGUI *New();
    vtkTypeMacro(vtkPlastimatchLoadableGUI,vtkSlicerModuleGUI);
    void PrintSelf(ostream& os, vtkIndent indent);

    // Description: Get/Set MRML node
    vtkGetObjectMacro (Logic, vtkPlastimatchLoadableLogic);
    vtkSetObjectMacro (Logic, vtkPlastimatchLoadableLogic);

    // Description:
    // Set the logic pointer from parent class pointer.
    // Overloads implementation in vtkSlicerModulesGUI
    // to allow loadable modules.
    virtual void SetModuleLogic ( vtkSlicerLogic *logic )
    {
	this->SetLogic(reinterpret_cast<vtkPlastimatchLoadableLogic*> (logic)); 
    }

    // Description: Get/Set MRML node
    vtkGetObjectMacro (PlastimatchLoadableNode, vtkMRMLPlastimatchLoadableNode);

    // Description:
    // Create widgets
    virtual void BuildGUI ( );

    // Description:
    // Add obsereves to GUI widgets
    virtual void AddGUIObservers ( );
  
    // Description:
    // Remove obsereves to GUI widgets
    virtual void RemoveGUIObservers ( );
  
    // Description:
    // Pprocess events generated by Logic
    virtual void ProcessLogicEvents ( vtkObject *caller, unsigned long event,
	void *callData ){};

    // Description:
    // Pprocess events generated by GUI widgets
    virtual void ProcessGUIEvents ( vtkObject *caller, unsigned long event,
	void *callData );

    // Description:
    // Pprocess events generated by MRML
    virtual void ProcessMRMLEvents ( vtkObject *caller, unsigned long event, 
	void *callData);
    // Description:
    // Describe behavior at module startup and exit.
    virtual void Enter ( ){};
    virtual void Exit ( ){};

 protected:
    vtkPlastimatchLoadableGUI();
    virtual ~vtkPlastimatchLoadableGUI();
    vtkPlastimatchLoadableGUI(const vtkPlastimatchLoadableGUI&);
    void operator=(const vtkPlastimatchLoadableGUI&);

    // Description:
    // Updates GUI widgets based on parameters values in MRML node
    void UpdateGUI();

    // Description:
    // Updates parameters values in MRML node based on GUI widgets 
    void UpdateMRML();
  
    vtkKWScaleWithEntry* ConductanceScale;
    vtkKWScaleWithEntry* TimeStepScale;
    vtkKWScaleWithEntry* NumberOfIterationsScale;
    vtkSlicerNodeSelectorWidget* OutVolumeSelector;
    vtkSlicerNodeSelectorWidget* GADNodeSelector;
    vtkKWRadioButtonSetWithLabel* CostFunctionButtonSet;
    vtkKWPushButton* ApplyButton;

    vtkSlicerNodeSelectorWidget* FixedVolumeSelector;
    vtkSlicerNodeSelectorWidget* MovingVolumeSelector;
  
    vtkPlastimatchLoadableLogic *Logic;
    vtkMRMLPlastimatchLoadableNode* PlastimatchLoadableNode;
};

#endif
